{"ast":null,"code":"var _jsxFileName = \"/Users/manalmahmood/ishtylemine/client/src/PortfolioContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PortfolioContext = /*#__PURE__*/createContext({});\nexport function PortfolioContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [portfolio, setPortfolio] = useState(null);\n  const [ready, setReady] = useState(false);\n  useEffect(() => {\n    console.log(\"Fetching portfolio data...\");\n    axios.get('/portfoliodata').then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      console.log(\"Received portfolio data:\", data);\n      setPortfolio(data);\n      setReady(true);\n    }).catch(error => {\n      console.error(\"Error fetching portfolio data:\", error);\n      setReady(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PortfolioContext.Provider, {\n    value: {\n      portfolio,\n      setPortfolio,\n      ready\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(PortfolioContextProvider, \"XMjOlarQXOoglHSjHUhRFUFbhK8=\");\n_c = PortfolioContextProvider;\nvar _c;\n$RefreshReg$(_c, \"PortfolioContextProvider\");","map":{"version":3,"names":["axios","createContext","useEffect","useState","jsxDEV","_jsxDEV","PortfolioContext","PortfolioContextProvider","_ref","_s","children","portfolio","setPortfolio","ready","setReady","console","log","get","then","_ref2","data","catch","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manalmahmood/ishtylemine/client/src/PortfolioContext.js"],"sourcesContent":["import axios from \"axios\";\nimport { createContext, useEffect, useState } from \"react\";\n\nexport const PortfolioContext = createContext({});\n\nexport function PortfolioContextProvider({children}) {\n    const [portfolio, setPortfolio] = useState(null);\n    const [ready, setReady] = useState(false);\n\n    useEffect(() => {\n        console.log(\"Fetching portfolio data...\");\n        axios.get('/portfoliodata')\n          .then(({data}) => {\n            console.log(\"Received portfolio data:\", data);\n            setPortfolio(data);\n            setReady(true);\n          })\n          .catch((error) => {\n            console.error(\"Error fetching portfolio data:\", error);\n            setReady(true);\n          });\n    }, []);\n    \n    return(\n        <PortfolioContext.Provider value={{portfolio, setPortfolio, ready}}>\n            {children}\n        </PortfolioContext.Provider>\n\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;AAEjD,OAAO,SAASM,wBAAwBA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC/C,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzChB,KAAK,CAACiB,GAAG,CAAC,gBAAgB,CAAC,CACxBC,IAAI,CAACC,KAAA,IAAY;MAAA,IAAX;QAACC;MAAI,CAAC,GAAAD,KAAA;MACXJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,IAAI,CAAC;MAC7CR,YAAY,CAACQ,IAAI,CAAC;MAClBN,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDR,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,gBAAgB,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAACb,SAAS;MAAEC,YAAY;MAAEC;IAAK,CAAE;IAAAH,QAAA,EAC9DA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACe;AAGpC;AAACnB,EAAA,CAxBeF,wBAAwB;AAAAsB,EAAA,GAAxBtB,wBAAwB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}